From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: xuyin <1573880184@qq.com>
Date: Thu, 30 Jan 2025 00:06:17 +0800
Subject: [PATCH] Added Mint command.


diff --git a/src/main/java/com/menthamc/mint/command/MintCommand.java b/src/main/java/com/menthamc/mint/command/MintCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..cfc60f7d9054a6c78fa565c886454cf88f9f4768
--- /dev/null
+++ b/src/main/java/com/menthamc/mint/command/MintCommand.java
@@ -0,0 +1,69 @@
+package com.menthamc.mint.command;
+
+import com.menthamc.mint.command.subcommands.ReloadConfigCommands;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.format.NamedTextColor;
+import net.kyori.adventure.text.format.TextColor;
+import org.bukkit.command.Command;
+import org.bukkit.command.CommandSender;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.Arrays;
+import java.util.List;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+
+public class MintCommand extends Command {
+    private final Map<String, MintSubCommand> subcommands = new ConcurrentHashMap<>();
+
+    public MintCommand() {
+        super("mint");
+        this.setDescription("Mint server command.");
+
+        subcommands.put("reload", new ReloadConfigCommands());
+    }
+
+    @Override
+    public boolean execute(@NotNull CommandSender sender, @NotNull String commandLabel, @NotNull String[] args) {
+        if (!testPermission(sender) || !sender.isOp()) {
+            sender.sendMessage(Component
+                    .text("No permission to execute this command!")
+                    .color(NamedTextColor.RED)
+            );
+        }
+
+        if (args.length < 1) {
+            sender.sendMessage(Component
+                    .text("Usage: /mint <commands>")
+                    .color(NamedTextColor.RED)
+            );
+        }
+
+        if (args.length >= 1) {
+            String subCommand = args[0];
+
+            if (subcommands.containsKey(subCommand)) {
+                return subcommands.get(subCommand).execute(
+                        sender, subCommand,
+                        Arrays.copyOfRange(args, 1, args.length)
+                );
+            } else {
+                sender.sendMessage(Component
+                        .text("Not exist command: " + subCommand)
+                        .color(NamedTextColor.RED)
+                );
+            }
+        }
+
+        return true;
+    }
+
+    @Override
+    public @NotNull List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args) throws IllegalArgumentException {
+        if (args.length == 1){
+            return subcommands.keySet().stream().toList();
+        }
+
+        return List.of();
+    }
+}
diff --git a/src/main/java/com/menthamc/mint/command/MintSubCommand.java b/src/main/java/com/menthamc/mint/command/MintSubCommand.java
new file mode 100644
index 0000000000000000000000000000000000000000..a9a2e1ef7eeb0c1c8c378ad7a7819bd6eefc5eac
--- /dev/null
+++ b/src/main/java/com/menthamc/mint/command/MintSubCommand.java
@@ -0,0 +1,7 @@
+package com.menthamc.mint.command;
+
+import org.bukkit.command.CommandSender;
+
+public abstract class MintSubCommand {
+    public abstract boolean execute(CommandSender sender, String commandLabel, String[] args);
+}
diff --git a/src/main/java/com/menthamc/mint/command/subcommands/ReloadConfigCommands.java b/src/main/java/com/menthamc/mint/command/subcommands/ReloadConfigCommands.java
new file mode 100644
index 0000000000000000000000000000000000000000..04ae2cf6525cc54672cf6e64892e46de41ef2492
--- /dev/null
+++ b/src/main/java/com/menthamc/mint/command/subcommands/ReloadConfigCommands.java
@@ -0,0 +1,20 @@
+package com.menthamc.mint.command.subcommands;
+
+import com.menthamc.mint.command.MintSubCommand;
+import com.menthamc.mint.config.MintConfig;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.format.NamedTextColor;
+import org.bukkit.command.CommandSender;
+
+public class ReloadConfigCommands extends MintSubCommand {
+    @Override
+    public boolean execute(CommandSender sender, String commandLabel, String[] args) {
+        MintConfig.reloadConfig();
+        sender.sendMessage(Component
+                .text("Config reload complete.")
+                .color(NamedTextColor.GREEN)
+        );
+
+        return true;
+    }
+}
diff --git a/src/main/java/com/menthamc/mint/config/MintConfig.java b/src/main/java/com/menthamc/mint/config/MintConfig.java
index 78d0f8f1f8617f01eecebc0d223586ffa7470925..65da25399b6f4b8a25db9a5f066893407b7a2cde 100644
--- a/src/main/java/com/menthamc/mint/config/MintConfig.java
+++ b/src/main/java/com/menthamc/mint/config/MintConfig.java
@@ -1,9 +1,11 @@
 package com.menthamc.mint.config;
 
 import com.electronwill.nightconfig.core.file.CommentedFileConfig;
+import com.menthamc.mint.command.MintCommand;
 import io.github.classgraph.ClassGraph;
 import io.github.classgraph.ClassInfo;
 import io.github.classgraph.ScanResult;
+import org.bukkit.Bukkit;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
@@ -33,6 +35,7 @@ public class MintConfig {
     }
 
     public static void setup() {
+        Bukkit.getCommandMap().register("mint", new MintCommand());
     }
 
     public static void loadConfig() {

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: xuyin <1573880184@qq.com>
Date: Thu, 30 Jan 2025 22:12:40 +0800
Subject: [PATCH] Fixed MC-2025


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 41379ed92e60e76a2acbd8ce76d997ee6c33b636..4c221b36a90fb038927376a38c76ccaaae4473f7 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -2571,6 +2571,16 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
             if (freezeLocked) {
                 nbttagcompound.putBoolean("Paper.FreezeLock", true);
             }
+
+            // Mint start - Fix MC-2025
+            AABB boundingBox = getBoundingBox();
+            ListTag boundingBoxList = new ListTag();
+            for (double coord : new double[]{boundingBox.minX, boundingBox.minY, boundingBox.minZ, boundingBox.maxX, boundingBox.maxY, boundingBox.maxZ}) {
+                boundingBoxList.add(DoubleTag.valueOf(coord));
+            }
+            nbttagcompound.put("Mint.BoundingBox", boundingBoxList);
+            // Mint end
+
             // Paper end
             return nbttagcompound;
         } catch (Throwable throwable) {
@@ -2649,6 +2659,13 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                         this.reapplyPosition();
                     }
 
+                    // Mint start - Fix MC-2025
+                    if (nbt.contains("Mint.BoundingBox", net.minecraft.nbt.Tag.TAG_LIST)) {
+                        ListTag boundingBoxList = nbt.getList("Mint.BoundingBox", net.minecraft.nbt.Tag.TAG_DOUBLE);
+                        setBoundingBox(new AABB(boundingBoxList.getDouble(0), boundingBoxList.getDouble(1), boundingBoxList.getDouble(2), boundingBoxList.getDouble(3), boundingBoxList.getDouble(4), boundingBoxList.getDouble(5)));
+                    }
+                    // Mint end
+
                 } else {
                     throw new IllegalStateException("Entity has invalid rotation");
                 }
